// Generated by CoffeeScript 1.6.1
(function() {
  var EventDispatcher, PageModel, PageView, VenueCollection, VenueController, VenueDetailView, VenueListModel, VenueListView, VenueModel, VenueView, get_api_url, list_all_venues,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    _this = this;

  get_api_url = function(url_part) {
    var base_url, client_id, client_secret;
    base_url = 'https://api.foursquare.com/v2/';
    client_id = 'SMMJMKV13HMR13O10TTEQ1FOCFLBRLHFQEUTHJN3VZTPZGVN';
    client_secret = 'JDX41GMCYEPBWP1CZLUJFXNE0MINOUKOKFECUUBL5G1F5DXZ';
    return "" + base_url + url_part + "?client_id=" + client_id + "&client_secret=" + client_secret + "&v=20140107";
  };

  $(document).ready(function() {
    return list_all_venues();
  });

  EventDispatcher = {
    SHOW_VENUE: 'show_venue',
    CLEAN: 'clean'
  };

  _.extend(EventDispatcher, Backbone.Events);

  VenueModel = (function(_super) {

    __extends(VenueModel, _super);

    function VenueModel() {
      return VenueModel.__super__.constructor.apply(this, arguments);
    }

    return VenueModel;

  })(Backbone.Model);

  VenueCollection = (function(_super) {

    __extends(VenueCollection, _super);

    function VenueCollection() {
      return VenueCollection.__super__.constructor.apply(this, arguments);
    }

    VenueCollection.prototype.model = VenueModel;

    return VenueCollection;

  })(Backbone.Collection);

  VenueListModel = (function(_super) {

    __extends(VenueListModel, _super);

    function VenueListModel() {
      var _this = this;
      this.initialize = function() {
        return VenueListModel.prototype.initialize.apply(_this, arguments);
      };
      return VenueListModel.__super__.constructor.apply(this, arguments);
    }

    VenueListModel.prototype.initialize = function() {
      return this.e_list = new VenueCollection;
    };

    return VenueListModel;

  })(Backbone.Model);

  VenueListView = (function(_super) {

    __extends(VenueListView, _super);

    function VenueListView() {
      var _this = this;
      this.reset_col = function() {
        return VenueListView.prototype.reset_col.apply(_this, arguments);
      };
      this.render = function() {
        return VenueListView.prototype.render.apply(_this, arguments);
      };
      this.add_venue = function(venue_model) {
        return VenueListView.prototype.add_venue.apply(_this, arguments);
      };
      this.initialize = function() {
        return VenueListView.prototype.initialize.apply(_this, arguments);
      };
      return VenueListView.__super__.constructor.apply(this, arguments);
    }

    VenueListView.prototype.initialize = function() {
      var num_col, tile_width;
      tile_width = 250;
      this.col_to_add = 1;
      this.model.e_list.bind('add', this.add_venue);
      EventDispatcher.bind(EventDispatcher.CLEAN, this.reset_col);
      num_col = Math.floor($(window).width() / tile_width);
      this.num_col = num_col > 4 ? 4 : num_col < 1 ? 1 : num_col;
      return this.render();
    };

    VenueListView.prototype.add_venue = function(venue_model) {
      var venue_view;
      venue_view = new VenueView({
        model: venue_model
      });
      $("#venue_col_" + this.col_to_add).append(venue_view.render());
      this.col_to_add++;
      if (this.col_to_add > this.num_col) {
        return this.col_to_add = 1;
      }
    };

    VenueListView.prototype.render = function() {
      var c, _i, _ref, _results;
      _results = [];
      for (c = _i = 1, _ref = this.num_col; 1 <= _ref ? _i <= _ref : _i >= _ref; c = 1 <= _ref ? ++_i : --_i) {
        _results.push($("#venue_list").append("<div id='venue_col_" + c + "' class='span" + (12 / this.num_col) + "'></div>"));
      }
      return _results;
    };

    VenueListView.prototype.reset_col = function() {
      return this.col_to_add = 1;
    };

    return VenueListView;

  })(Backbone.View);

  VenueView = (function(_super) {

    __extends(VenueView, _super);

    function VenueView() {
      var _this = this;
      this.remove_self = function() {
        return VenueView.prototype.remove_self.apply(_this, arguments);
      };
      this.show_details = function() {
        return VenueView.prototype.show_details.apply(_this, arguments);
      };
      this.render = function() {
        return VenueView.prototype.render.apply(_this, arguments);
      };
      this.initialize = function() {
        return VenueView.prototype.initialize.apply(_this, arguments);
      };
      return VenueView.__super__.constructor.apply(this, arguments);
    }

    VenueView.prototype.attributes = {
      style: "text-align: center; cursor: pointer"
    };

    VenueView.prototype.className = 'well';

    VenueView.prototype.initialize = function() {
      this.template = $.template($("#venue_template"));
      return EventDispatcher.bind(EventDispatcher.CLEAN, this.remove_self);
    };

    VenueView.prototype.events = {
      "click": 'show_details'
    };

    VenueView.prototype.render = function() {
      $(this.el).html($.tmpl(this.template, this.model.toJSON()));
      return this.el;
    };

    VenueView.prototype.show_details = function() {
      return EventDispatcher.trigger(EventDispatcher.SHOW_VENUE, this.model);
    };

    VenueView.prototype.remove_self = function() {
      return this.remove();
    };

    return VenueView;

  })(Backbone.View);

  VenueDetailView = (function(_super) {

    __extends(VenueDetailView, _super);

    function VenueDetailView() {
      var _this = this;
      this.update_popup = function() {
        return VenueDetailView.prototype.update_popup.apply(_this, arguments);
      };
      this.get_photos = function() {
        return VenueDetailView.prototype.get_photos.apply(_this, arguments);
      };
      this.get_venue_details = function() {
        return VenueDetailView.prototype.get_venue_details.apply(_this, arguments);
      };
      this.render = function() {
        return VenueDetailView.prototype.render.apply(_this, arguments);
      };
      this.initialize = function() {
        return VenueDetailView.prototype.initialize.apply(_this, arguments);
      };
      return VenueDetailView.__super__.constructor.apply(this, arguments);
    }

    VenueDetailView.prototype.tagName = 'div';

    VenueDetailView.prototype.className = 'modal fade';

    VenueDetailView.prototype.id = 'venue_popup';

    VenueDetailView.prototype.initialize = function() {
      this.venue_popup_template = $.template($("#venue_details_template"));
      return this.carousal_photo_template = $.template($("#carousal_item_template"));
    };

    VenueDetailView.prototype.render = function() {
      var cat, model_json, _i, _len, _ref;
      model_json = this.model.toJSON();
      model_json.venue_location = "			" + (model_json.location.crossStreet ? model_json.location.crossStreet : '') + "			" + (model_json.location.city ? model_json.location.city : '') + "			" + (model_json.location.state ? model_json.location.state : '') + "			" + (model_json.location.postalCode ? model_json.location.postalCode : '') + "			" + (model_json.location.country ? model_json.location.country : '') + "			";
      model_json.display_categories = [];
      _ref = model_json.categories;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cat = _ref[_i];
        model_json.display_categories.push(cat.name);
      }
      $(this.el).html($.tmpl(this.venue_popup_template, model_json));
      return this.el;
    };

    VenueDetailView.prototype.get_venue_details = function() {
      return this.get_photos();
    };

    VenueDetailView.prototype.get_photos = function() {
      var ajax_params,
        _this = this;
      if (!this.model.get('venue_photos')) {
        $(this.el).find(".carousel-control").hide();
        $(this.el).find(".item:first").addClass('active');
        ajax_params = {
          url: get_api_url("venues/" + this.model.id + "/photos"),
          dataType: "jsonp",
          context: this,
          success: function(response) {
            if (response.meta.code === 200) {
              _this.model.set({
                venue_photos: response.response.photos.items
              });
              return _this.update_popup();
            }
          }
        };
        return $.ajax(ajax_params);
      } else {
        return this.update_popup();
      }
    };

    VenueDetailView.prototype.update_popup = function() {
      $(this.el).find('.carousel-inner').html($.tmpl(this.carousal_photo_template, this.model.get('venue_photos'))).find(".item:first").addClass('active');
      return $(this.el).find(".carousel-control").show();
    };

    return VenueDetailView;

  })(Backbone.View);

  PageModel = (function(_super) {

    __extends(PageModel, _super);

    function PageModel() {
      return PageModel.__super__.constructor.apply(this, arguments);
    }

    return PageModel;

  })(Backbone.Model);

  PageView = (function(_super) {

    __extends(PageView, _super);

    function PageView() {
      var _this = this;
      this.show_venue_popup = function(venue_model) {
        return PageView.prototype.show_venue_popup.apply(_this, arguments);
      };
      this.clean_old_list = function() {
        return PageView.prototype.clean_old_list.apply(_this, arguments);
      };
      this.get_venues = function(lat, lng) {
        return PageView.prototype.get_venues.apply(_this, arguments);
      };
      this.place_marker = function(lat, lng) {
        return PageView.prototype.place_marker.apply(_this, arguments);
      };
      this.location_info = function(pos) {
        return PageView.prototype.location_info.apply(_this, arguments);
      };
      this.location_error = function(error) {
        return PageView.prototype.location_error.apply(_this, arguments);
      };
      this.initialize = function() {
        return PageView.prototype.initialize.apply(_this, arguments);
      };
      return PageView.__super__.constructor.apply(this, arguments);
    }

    PageView.prototype.initialize = function() {
      var map_options,
        _this = this;
      this.venue_list_model = new VenueListModel;
      this.venue_list_view = new VenueListView({
        el: $("#venue_list"),
        model: this.venue_list_model
      });
      EventDispatcher.bind(EventDispatcher.SHOW_VENUE, this.show_venue_popup);
      map_options = {
        zoom: 2,
        center: new google.maps.LatLng(0, 0)
      };
      this.map = new google.maps.Map(document.getElementById('map-canvas'), map_options);
      google.maps.event.addListener(this.map, 'click', function(ev) {
        return _this.get_venues(ev.latLng.lat(), ev.latLng.lng());
      });
      if (navigator.geolocation) {
        return navigator.geolocation.getCurrentPosition(this.location_info, this.location_error);
      }
    };

    PageView.prototype.location_error = function(error) {};

    PageView.prototype.location_info = function(pos) {
      var lat, lng;
      lat = pos.coords.latitude;
      lng = pos.coords.longitude;
      return this.get_venues(lat, lng);
    };

    PageView.prototype.place_marker = function(lat, lng) {
      if (this.marker) {
        this.marker.setMap(null);
      }
      this.marker = null;
      this.marker = new google.maps.Marker({
        position: new google.maps.LatLng(lat, lng),
        map: this.map,
        animation: google.maps.Animation.DROP,
        title: 'Your favorite place'
      });
      return this.map.panTo(this.marker.getPosition());
    };

    PageView.prototype.get_venues = function(lat, lng) {
      var ajax_params,
        _this = this;
      this.lat = lat;
      this.lng = lng;
      ajax_params = {
        url: get_api_url('venues/explore'),
        dataType: "jsonp",
        data: {
          ll: "" + this.lat + "," + this.lng,
          venuePhotos: 1
        },
        context: this,
        success: function(response) {
          var group, item, venue_model, _i, _j, _len, _len1, _ref, _ref1;
          if (response.meta.code === 200) {
            _this.clean_old_list();
            $("#venue_list_info").text("in " + (response.response.suggestedRadius / 1000) + " Km of your location (" + _this.lat + ", " + _this.lng + ")");
            _ref = response.response.groups;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              group = _ref[_i];
              _ref1 = group.items;
              for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                item = _ref1[_j];
                if (item.venue.photos.count > 0) {
                  venue_model = new VenueModel(item.venue);
                  _this.venue_list_model.e_list.add(venue_model);
                }
              }
            }
            return $("a[href=#venue_list_container]").click();
          }
        }
      };
      $.ajax(ajax_params);
      return this.place_marker(lat, lng);
    };

    PageView.prototype.clean_old_list = function() {
      this.venue_list_model.e_list.reset();
      return EventDispatcher.trigger(EventDispatcher.CLEAN);
    };

    PageView.prototype.show_venue_popup = function(venue_model) {
      var _this = this;
      this.venue_detail_view = new VenueDetailView({
        model: venue_model
      });
      $(this.el).append(this.venue_detail_view.render());
      $(this.el).find('.modal').modal().on('hidden', function() {
        return _this.venue_detail_view.remove();
      });
      return this.venue_detail_view.get_venue_details();
    };

    return PageView;

  })(Backbone.View);

  VenueController = (function(_super) {

    __extends(VenueController, _super);

    function VenueController() {
      var _this = this;
      this.initialize = function() {
        return VenueController.prototype.initialize.apply(_this, arguments);
      };
      return VenueController.__super__.constructor.apply(this, arguments);
    }

    VenueController.prototype.initialize = function() {
      this.page_model = new PageModel;
      return this.page_view = new PageView({
        el: $("#maindiv"),
        model: this.page_model
      });
    };

    return VenueController;

  })(Backbone.Router);

  list_all_venues = function() {
    var venue_controller;
    return venue_controller = new VenueController;
  };

}).call(this);
